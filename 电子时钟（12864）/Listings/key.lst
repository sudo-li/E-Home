C51 COMPILER V9.56.0.0   KEY                                                               02/19/2020 05:58:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE APP\key\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\APP;.\APP\LCD12864;.\APP\d
                    -s1302;.\APP\24c02;.\APP\ds18b20;.\APP\DHT11;.\APP\key) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Objects\key
                    -.obj)

line level    source

   1          #include "key.h"
   2          #include "lcd.h"
   3          #include "ds1302.h"
   4          #include "24c02.h"
   5          
   6          uchar clock[3];
   7          uchar Alarm_clock[2];
   8          
   9          uchar Key_Read()
  10          {
  11   1              if((ADD == 0) || (RED == 0) || (ALARM == 0) || (SET) == 0)
  12   1              {
  13   2                      Delay10ms(1);
  14   2                      if(ADD == 0)
  15   2                      {
  16   3                              while(!ADD);
  17   3                              return ADD_1;
  18   3                      }
  19   2                      else if(RED == 0)
  20   2                      {
  21   3                              while(!RED);
  22   3                              return RED_2;
  23   3                      }
  24   2                      else if(ALARM == 0)
  25   2                      {
  26   3                              while(!ALARM);
  27   3                              return ALARM_3;
  28   3                      }
  29   2                      else if(SET == 0)
  30   2                      {
  31   3                              while(!SET);
  32   3                              return SET_4;
  33   3                      }
  34   2              }
  35   1              return 0;
  36   1      }
  37          
  38          void  Add_one(uchar temp,uchar i)
  39          {
  40   1              if(temp == ADD_1)//加一
  41   1              {
  42   2                      Write_ds1302(0x8e,0x00);//关闭写保护
  43   2                      
  44   2                      
  45   2                      if(i == 1)
  46   2                      {
  47   3                              if((time[6] & 0x0f) == 0x09)
  48   3                              {
  49   4                                      time[6] >>= 4;
  50   4                                      time[6] ++;
  51   4                                      time[6] <<= 4;
  52   4                              }
  53   3                              else
C51 COMPILER V9.56.0.0   KEY                                                               02/19/2020 05:58:44 PAGE 2   

  54   3                                      time[6]++;
  55   3                              Write_ds1302(0x8c,time[6]);
  56   3                      }
  57   2                      
  58   2                      
  59   2                      if(i == 2)
  60   2                      {
  61   3                              if((time[4] & 0x0f) == 0x09)
  62   3                              {
  63   4                                      time[4] >>= 4;
  64   4                                      time[4] ++;
  65   4                                      time[4] <<= 4;
  66   4                              }
  67   3                              else
  68   3                                      time[4]++;
  69   3                              if(time[4] == 0x13)
  70   3                                      time[4] = 0x01;
  71   3                              Write_ds1302(0x88,time[4]);
  72   3                      }
  73   2                      
  74   2                      
  75   2                      if(i == 3)
  76   2                      {
  77   3                              if((time[3] & 0x0f) == 0x09)
  78   3                              {
  79   4                                      time[3] >>= 4;
  80   4                                      time[3] ++;
  81   4                                      time[3] <<= 4;
  82   4                              }
  83   3                              else
  84   3                                      time[3]++;
  85   3                              if(time[3] == 0x32)
  86   3                                      time[3] = 0x01;
  87   3                              Write_ds1302(0x86,time[3]);
  88   3                      }
  89   2                      
  90   2                      
  91   2                      if(i == 4)
  92   2                      {
  93   3                              time[5]++;
  94   3                              if(time[5] == 0x08)
  95   3                                      time[5] = 0x01;
  96   3                              Write_ds1302(0x8a,time[5]);
  97   3                      }
  98   2                      
  99   2                      
 100   2                      if(i == 5)
 101   2                      {
 102   3                              if((time[2] & 0x0f) == 0x09)
 103   3                              {
 104   4                                      time[2] >>= 4;
 105   4                                      time[2] ++;
 106   4                                      time[2] <<= 4;
 107   4                              }
 108   3                              else
 109   3                                      time[2]++;
 110   3                              if(time[2] == 0x24)
 111   3                                      time[2] = 0x00;
 112   3                              Write_ds1302(0x84,time[2]);
 113   3                      }
 114   2                      
 115   2                      if(i == 6)
C51 COMPILER V9.56.0.0   KEY                                                               02/19/2020 05:58:44 PAGE 3   

 116   2                      {
 117   3                              if((time[1] & 0x0f) == 0x09)
 118   3                              {
 119   4                                      time[1] >>= 4;
 120   4                                      time[1] ++;
 121   4                                      time[1] <<= 4;
 122   4                              }
 123   3                              else
 124   3                                      time[1]++;
 125   3                              if(time[1] == 0x60)
 126   3                                      time[1] = 0x00;
 127   3                              Write_ds1302(0x82,time[1]);
 128   3                      }
 129   2                      
 130   2                      if(i == 7)
 131   2                      {
 132   3                              if((time[0] & 0x0f) == 0x09)
 133   3                              {
 134   4                                      time[0] >>= 4;
 135   4                                      time[0] ++;
 136   4                                      time[0] <<= 4;
 137   4                              }
 138   3                              else
 139   3                                      time[0]++;
 140   3                              if(time[0] == 0x60)
 141   3                                      time[0] = 0x00;
 142   3                              Write_ds1302(0x80,time[0]);
 143   3                      }
 144   2                      
 145   2                      Write_ds1302(0x8e,0x80);
 146   2              }
 147   1      }
 148                  
 149          void Red_one(uchar temp,uchar i)
 150          {               
 151   1              if(temp == RED_2)
 152   1              {
 153   2                      Write_ds1302(0x8e,0x00);//关闭写保护
 154   2                      
 155   2                      
 156   2                      if(i == 1)
 157   2                      {
 158   3                              if((time[6] & 0x0f) == 0x00)
 159   3                              {
 160   4                                      time[6] >>= 4;
 161   4                                      time[6] --;
 162   4                                      time[6] <<= 4;
 163   4                                      time[6] |= 0x09;
 164   4                              }
 165   3                              else
 166   3                                      time[6]--;
 167   3                              Write_ds1302(0x8c,time[6]);
 168   3                      }
 169   2                      
 170   2                      
 171   2                      if(i == 2)
 172   2                      {
 173   3                              if((time[4] & 0x0f) == 0x00)
 174   3                              {
 175   4                                      time[4] >>= 4;
 176   4                                      time[4] --;
 177   4                                      time[4] <<= 4;
C51 COMPILER V9.56.0.0   KEY                                                               02/19/2020 05:58:44 PAGE 4   

 178   4                                      time[4] |= 0x09;
 179   4                              }
 180   3                              else
 181   3                                      time[4]--;
 182   3                              if(time[4] == 0x00)
 183   3                                      time[4] = 0x12;
 184   3                              Write_ds1302(0x88,time[4]);
 185   3                      }
 186   2                      
 187   2                      
 188   2                      if(i == 3)
 189   2                      {
 190   3                              if((time[3] & 0x0f) == 0x00)
 191   3                              {
 192   4                                      time[3] >>= 4;
 193   4                                      time[3] --;
 194   4                                      time[3] <<= 4;
 195   4                                      time[3] |= 0x09;
 196   4                              }
 197   3                              else
 198   3                                      time[3]--;
 199   3                              if(time[3] == 0x00)
 200   3                                      time[3] = 0x31;
 201   3                              Write_ds1302(0x86,time[3]);
 202   3                      }
 203   2                      
 204   2                      if(i == 4)
 205   2                      {
 206   3                              time[5]--;
 207   3                              if(time[5] == 0x00)
 208   3                                      time[5] = 0x07;
 209   3                              Write_ds1302(0x8a,time[5]);
 210   3                      }
 211   2                      
 212   2                      
 213   2                      if(i == 5)
 214   2                      {
 215   3                              if((time[2] & 0x0f) == 0x00)
 216   3                              {
 217   4                                      time[2] >>= 4;
 218   4                                      time[2] --;
 219   4                                      time[2] <<= 4;
 220   4                                      time[2] |= 0x09;
 221   4                              }
 222   3                              else
 223   3                                      time[2]--;
 224   3                              Write_ds1302(0x84,time[2]);
 225   3                      }
 226   2                      
 227   2                      if(i == 6)
 228   2                      {
 229   3                              if((time[1] & 0x0f) == 0x00)
 230   3                              {
 231   4                                      time[1] >>= 4;
 232   4                                      time[1] --;
 233   4                                      time[1] <<= 4;
 234   4                                      time[1] |= 0x09;
 235   4                              }
 236   3                              else
 237   3                                      time[1]--;
 238   3                              Write_ds1302(0x82,time[1]);
 239   3                      }
C51 COMPILER V9.56.0.0   KEY                                                               02/19/2020 05:58:44 PAGE 5   

 240   2                      
 241   2                      if(i == 7)
 242   2                      {
 243   3                              if((time[0] & 0x0f) == 0x00)
 244   3                              {
 245   4                                      time[0] >>= 4;
 246   4                                      time[0] --;
 247   4                                      time[0] <<= 4;
 248   4                                      time[0] |= 0x09;
 249   4                              }
 250   3                              else
 251   3                                      time[0]--;
 252   3                              Write_ds1302(0x80,time[0]);
 253   3                      }
 254   2                      
 255   2                      Write_ds1302(0x8e,0x80);
 256   2              }
 257   1      }
 258          
 259          void Key_Function(uchar temp)
 260          {
 261   1              static uchar i = 0,k = 0,filg = 1,filg1 = 1,j = 0,s = 0;
 262   1              if(((k == 1) || (temp == SET_4)) && (filg == 1))//进入设置模式
 263   1              {
 264   2                      filg1 = 0;
 265   2                      if(temp == SET_4)
 266   2                              i++;
 267   2                      k = 1;
 268   2                      switch(i)
 269   2                      {
 270   3                              case 1:clear_8x16(1,8*2); clear_8x16(1,8*3); break;
 271   3                              case 2:clear_8x16(1,8*6); clear_8x16(1,8*7); break;
 272   3                              case 3:clear_8x16(1,8*10); clear_8x16(1,8*11); break;
 273   3                              case 4:clear_8x16(1,8*15); break;
 274   3                              case 5:clear_8x16(3,8*3); clear_8x16(3,8*4); break;
 275   3                              case 6:clear_8x16(3,8*6); clear_8x16(3,8*7); break;
 276   3                              case 7:clear_8x16(3,8*9); clear_8x16(3,8*10); break;
 277   3                              case 8:i = 0; k = 0; filg1 = 1;
 278   3                      }
 279   2                      Add_one(temp,i);
 280   2                      Red_one(temp,i);
 281   2              }
 282   1              if(((s == 1) || (temp == ALARM_3)) && (filg1 == 1))//设置闹钟时间
 283   1              {
 284   2                      s = 1;
 285   2                      clock[2] = 0x01;
 286   2                      if(k == 0)
 287   2                      {
 288   3                              
 289   3                              clock[0] = time[2];
 290   3                              clock[1] = time[1];
 291   3                              clear_8x16(3,8*13);
 292   3                              clear_8x16(3,8*14);
 293   3                      }
 294   2                      filg = 0;
 295   2                      k = 1;
 296   2                      display_graphic_8x16(3,8*13,N);
 297   2                      display_graphic_8x16(5,8*3,&num[(clock[0] / 16)][0]);
 298   2                      display_graphic_8x16(5,8*4,&num[(clock[0] & 0x0f)][0]);
 299   2                      display_graphic_8x16(5,8*5,mao_hao);
 300   2                      display_graphic_8x16(5,8*6,&num[(clock[1] / 16)][0]);
 301   2                      display_graphic_8x16(5,8*7,&num[(clock[1] & 0x0f)][0]);
C51 COMPILER V9.56.0.0   KEY                                                               02/19/2020 05:58:44 PAGE 6   

 302   2                      if(temp == SET_4)
 303   2                              j++;
 304   2                      switch(j)
 305   2                      {
 306   3                              case 1:clear_8x16(5,8*3);clear_8x16(5,8*4);break;
 307   3                              case 2:clear_8x16(5,8*6);clear_8x16(5,8*7);break;
 308   3                              case 3:filg = 1; s = 0;
 309   3                      }
 310   2                      if(j == 1)
 311   2                      {
 312   3                              if(temp == ADD_1)
 313   3                              {
 314   4                                      if((clock[0] & 0x0f) == 0x09)
 315   4                                      {
 316   5                                              clock[0] >>= 4;
 317   5                                              clock[0] ++;
 318   5                                              clock[0] <<= 4;
 319   5                                      }
 320   4                                      else
 321   4                                              clock[0]++;
 322   4                              }                       
 323   3                              if(temp == RED_2)
 324   3                              {
 325   4                                      if((clock[0] & 0x0f) == 0x00)
 326   4                                      {
 327   5                                              clock[0] >>= 4;
 328   5                                              clock[0] --;
 329   5                                              clock[0] <<= 4;
 330   5                                              clock[0] |= 0x09;
 331   5                                      }
 332   4                                      else
 333   4                                              clock[0]--;
 334   4                              }
 335   3                      }
 336   2                      if(j == 2)
 337   2                      {
 338   3                              if(temp == ADD_1)
 339   3                              {
 340   4                                      if((clock[1] & 0x0f) == 0x09)
 341   4                                      {
 342   5                                              clock[1] >>= 4;
 343   5                                              clock[1] ++;
 344   5                                              clock[1] <<= 4;
 345   5                                      }
 346   4                                      else
 347   4                                              clock[1]++;
 348   4                              }
 349   3                              
 350   3                              if(temp == RED_2)
 351   3                              {
 352   4                                      if((clock[1] & 0x0f) == 0x00)
 353   4                                      {
 354   5                                              clock[1] >>= 4;
 355   5                                              clock[1] --;
 356   5                                              clock[1] <<= 4;
 357   5                                              clock[1] |= 0x09;
 358   5                                      }
 359   4                                      else
 360   4                                              clock[1]--;
 361   4                              }
 362   3                      }
 363   2                      if(j == 3)
C51 COMPILER V9.56.0.0   KEY                                                               02/19/2020 05:58:44 PAGE 7   

 364   2                      {
 365   3                              Alarm_clock[1] = clock[1];
 366   3                              Alarm_clock[0] = clock[0];
 367   3                              j = 0;
 368   3                      }
 369   2              }
 370   1      }
 371          
 372          
 373          
 374          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1289    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
