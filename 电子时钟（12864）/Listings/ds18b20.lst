C51 COMPILER V9.56.0.0   DS18B20                                                           02/19/2020 05:58:44 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\ds18b20.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE APP\ds18b20\ds18b20.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\APP;.\APP\LCD12864
                    -;.\APP\ds1302;.\APP\24c02;.\APP\ds18b20;.\APP\DHT11;.\APP\key) DEBUG OBJECTEXTEND PRINT(.\Listings\ds18b20.lst) OBJECT(.
                    -\Objects\ds18b20.obj)

line level    source

   1          #include "ds18b20.h"
   2          
   3          void Delay1ms(uint y)
   4          {
   5   1              uint x;
   6   1              for( ; y>0; y--)
   7   1              {
   8   2                      for(x=110; x>0; x--);
   9   2              }
  10   1      }
  11          
  12          uchar Ds18b20Init()
  13          {
  14   1              uchar i;
  15   1              DSPORT = 0;                      //将总线拉低480us~960us
  16   1              i = 70; 
  17   1              while(i--);//延时642us
  18   1              DSPORT = 1;                     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  19   1              i = 0;
  20   1              while(DSPORT)   //等待DS18B20拉低总线
  21   1              {
  22   2                      i++;
  23   2                      if(i>5)//等待>5MS
  24   2                      {
  25   3                              return 0;//初始化失败
  26   3                      }
  27   2                      Delay1ms(1);    
  28   2              }
  29   1              return 1;//初始化成功
  30   1      }
  31          
  32          void Ds18b20WriteByte(uchar dat)
  33          {
  34   1              uint i, j;
  35   1      
  36   1              for(j=0; j<8; j++)
  37   1              {
  38   2                      DSPORT = 0;               //每写入一位数据之前先把总线拉低1us
  39   2                      i++;
  40   2                      DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  41   2                      i=6;
  42   2                      while(i--); //延时68us，持续时间最少60us
  43   2                      DSPORT = 1;     //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  44   2                      dat >>= 1;
  45   2              }
  46   1      }
  47          
  48          uchar Ds18b20ReadByte()
  49          {
  50   1              uchar byte, bi;
  51   1              uint i, j;      
  52   1              for(j=8; j>0; j--)
  53   1              {
C51 COMPILER V9.56.0.0   DS18B20                                                           02/19/2020 05:58:44 PAGE 2   

  54   2                      DSPORT = 0;//先将总线拉低1us
  55   2                      i++;
  56   2                      DSPORT = 1;//然后释放总线
  57   2                      i++;
  58   2                      i++;//延时6us等待数据稳定
  59   2                      bi = DSPORT;     //读取数据，从最低位开始读取
  60   2                      /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  61   2                      byte = (byte >> 1) | (bi << 7);                                           
  62   2                      i = 4;          //读取完之后等待48us再接着读取下一个数
  63   2                      while(i--);
  64   2              }                               
  65   1              return byte;
  66   1      }
  67          
  68          void  Ds18b20ChangTemp()
  69          {
  70   1              Ds18b20Init();
  71   1              Delay1ms(1);
  72   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
  73   1              Ds18b20WriteByte(0x44);     //温度转换命令
  74   1      //      Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
  75   1         
  76   1      }
  77          
  78          void  Ds18b20ReadTempCom()
  79          {       
  80   1      
  81   1              Ds18b20Init();
  82   1              Delay1ms(1);
  83   1              Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
  84   1              Ds18b20WriteByte(0xbe);  //发送读取温度命令
  85   1      }
  86          
  87          int Ds18b20ReadTemp()
  88          {
  89   1              int temp = 0;
  90   1              uchar tmh, tml;
  91   1              Ds18b20ChangTemp();                             //先写入转换命令
  92   1              Ds18b20ReadTempCom();                   //然后等待转换完后发送读取温度命令
  93   1              tml = Ds18b20ReadByte();                //读取温度值共16位，先读低字节
  94   1              tmh = Ds18b20ReadByte();                //再读高字节
  95   1              temp = tmh;
  96   1              temp <<= 8;
  97   1              temp |= tml;
  98   1              return temp;
  99   1      }
 100          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    236    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
